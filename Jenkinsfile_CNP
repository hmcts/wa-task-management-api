#!groovy

@Library("Infrastructure")

def type = "java"
def product = "wa"
def component = "task-management-api"

def secrets = [
  'wa-${env}' : [
  ],
  's2s-${env}' : [
    secret('microservicekey-wa-workflow-api', 'S2S_SECRET_WORKFLOW_API'),
  ]
]

static LinkedHashMap<String, Object> secret(String secretName, String envVar) {
  [$class     : 'AzureKeyVaultSecret',
   secretType : 'Secret',
   name       : secretName,
   version    : '',
   envVariable: envVar
  ]
}

withPipeline(type, product, component) {
  disableLegacyDeployment()

  env.IDAM_URL = "https://idam-api.aat.platform.hmcts.net"
  env.S2S_URL = "http://rpe-service-auth-provider-aat.service.core-compute-aat.internal"
  env.CAMUNDA_URL = "http://camunda-api-aat.service.core-compute-aat.internal/engine-rest"

  loadVaultSecrets(secrets)

  after('test') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/tests/**/*'
  }

  after('functionalTest:preview') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/tests/functional/**/*'
  }

  after('functionalTest:aat') {
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/site/serenity/**/*'
    steps.archiveArtifacts allowEmptyArchive: true, artifacts: '**/reports/tests/functional/**/*'
  }
}
